name: CI


on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

concurrency:

  group: ${{ github.workflow }}-${{ github.ref }}

  cancel-in-progress: true

permissions:
  contents: read

# Make sure CI fails on all warnings, including Clippy lints
env:
  RUSTFLAGS: "-Dwarnings"
  OPENSSL_INCLUDE_DIR: "/usr/include/openssl"

jobs:
  linux_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Rust
        run: rustup show
      - uses: mozilla-actions/sccache-action@v0.0.3
      - run: make venv
      - run: make pre-commit
      - run: make install
      - run: make test

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86]
    steps:
      - uses: actions/checkout@v3
      - name: Install OpenSSL & OpenBLAS development packages
        run: |
          echo
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev librust-openssl-dev libudev-dev libopenblas-dev build-essential
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Find and set OpenSSL directory
        run: |
          OPENSSL_INCLUDE_DIR=$(dpkg-query -L libssl-dev | grep '/include/openssl$' | head -n 1)
          echo "OpenSSL include directory is $OPENSSL_INCLUDE_DIR"
          export OPENSSL_INCLUDE_DIR
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
          before-script-linux: |
            export OPENSSL_INCLUDE_DIR=$(dpkg-query -L libssl-dev | grep '/include/openssl$' | head -n 1)
            export PKG_CONFIG_PATH="$OPENSSL_INCLUDE_DIR/pkgconfig:$PKG_CONFIG_PATH"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Run pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install .
          pip install -r tests/requirements-test.txt
          pytest tests/test_ols.py

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, macos, sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing *
